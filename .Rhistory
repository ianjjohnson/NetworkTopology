data <- read.csv('stats.csv')
summary(data)
data <- read.csv('stats.csv')
summary(data)
data$algorithm <- as.factor(data$algorithm)
plot(data$nodes, data$interference, col=data$algorithm, pch=20, main="Interference for different algorithms")
legend(x='topleft', legend=names(summary(data$algorithm)), col=data$algorithm, lwd=1, cex=.5)
pairs(data[, c("nodes", "interference", "hops", "distance", "totalTraffic")], col=data$algorithm, pch=20)
avg_clusterless <- data[which(data$cluster == "None"),]
head(avg_clusterless)
tail(avg_clusterless)
"
"
avg_weak <- data[which(data$cluster == "Weak"),]
avg_strong <- data[which(data$cluster == "Strong"),]
avg_clusterless <- as.factor(data$nodes)
library(data.table)
install.packages("data.table")
library(data.table)
A <- setDT(avg_clusterless[avg_clusterless$node == 30, ])[, mean(interference)]
avg_clusterless <- data[which(data$cluster == "None"),]
avg_clusterless$nodes <- as.factor(avg_clusterless$nodes)
data <- read.csv('stats.csv')
A <- setDT(avg_clusterless[avg_clusterless$node == 30, ])[, mean(interference)]
A
?aggregate
aggregate(avg_clusterless, nodes, mean)
aggregate(avg_clusterless, avg_clusterless$nodes, mean)
aggregate(avg_clusterless, by=="nodes", mean)
aggregate(avg_clusterless, by=avg_clusterless$nodes, mean)
type(avg_clusterless$nodes)
class(avg_clusterless$nodes)
mode(avg_clusterless$nodes)
aggregate(avg_clusterless, by=c(30, 100, 250), mean)
data <- read.csv('stats.csv')
aggregate(avg_clusterless, by=list(30, 100, 250), mean)
aggregate(avg_clusterless, by=list(avg_clusterless$nodes), mean)
aggregate(avg_clusterless, by=avg_clusterless, mean)
avg_clusterless <- data[which(data$cluster == "None"),]
aggregate(avg_clusterless, by=list(unique.values=avg_clusterless$nodes), mean)
aggregate(avg_clusterless, by=list(unique.values=avg_clusterless$nodes), FUN=mean)
aggregate(avg_clusterless, by=avg_clusterless$nodes, FUN=mean)
list(
aggregate(avg_clusterless, by=list(avg_clusterless$nodes), FUN=mean)
)
data$algorithm <- as.factor(data$algorithm)
avg_clusterless <- data[which(data$cluster == "None"),]
aggregate(avg_clusterless, by=list(avg_clusterless$nodes), FUN=mean)
aggregate(avg_clusterless, by=list(avg_clusterless$nodes, avg_clusterless$algorithm), FUN=mean)
summary(data)
data$algorithm <- as.factor(data$algorithm)
summary(data)
algorithm1 <- data[which(data$algorithm == 1),]
algorithm1 <- data[which(data$algorithm == 1),c("nodes", "interference", "sd_interference", "hops", "sd_hops", "distance", "sd_dist", "totalTraffic", "cluster")]
aggregate(algorithm1, by=list(algorithm1$nodes, algorithm1$cluster), FUN=mean)
algorithm1 <- data[which(data$algorithm == 1),c("nodes", "interference", "sd_interference", "hops", "sd_hops", "distance", "sd_dist", "totalTraffic")]
aggregate(algorithm1, by=list(algorithm1$nodes, algorithm1$cluster), FUN=mean)
algorithm1 <- data[which(data$algorithm == 1),c("nodes", "interference", "sd_interference", "hops", "sd_hops", "distance", "sd_dist", "totalTraffic", "cluster")]
aggregate(algorithm1, by=list(algorithm1$nodes, algorithm1$cluster), FUN=mean)
data <- read.csv('stats.csv')
data$algorithm <- as.factor(data$algorithm)
algorithm1 <- data[which(data$algorithm == 1),c("nodes", "interference", "sd_interference", "hops", "sd_hops", "distance", "sd_dist", "totalTraffic", "cluster")]
algorithm1 <- aggregate(algorithm1, by=list(algorithm1$nodes, algorithm1$cluster), FUN=mean)
algorithm2 <- data[which(data$algorithm == 2),c("nodes", "interference", "sd_interference", "hops", "sd_hops", "distance", "sd_dist", "totalTraffic", "cluster")]
algorithm2 <- aggregate(algorithm2, by=list(algorithm2$nodes, algorithm2$cluster), FUN=mean)
algorithm3 <- data[which(data$algorithm == 3),c("nodes", "interference", "sd_interference", "hops", "sd_hops", "distance", "sd_dist", "totalTraffic", "cluster")]
algorithm3 <- aggregate(algorithm3, by=list(algorithm3$nodes, algorithm3$cluster), FUN=mean)
algorithm4 <- data[which(data$algorithm == 4),c("nodes", "interference", "sd_interference", "hops", "sd_hops", "distance", "sd_dist", "totalTraffic", "cluster")]
algorithm4 <- aggregate(algorithm4, by=list(algorithm4$nodes, algorithm4$cluster), FUN=mean)
algorithm5 <- data[which(data$algorithm == 5),c("nodes", "interference", "sd_interference", "hops", "sd_hops", "distance", "sd_dist", "totalTraffic", "cluster")]
algorithm5 <- aggregate(algorithm5, by=list(algorithm5$nodes, algorithm5$cluster), FUN=mean)
algorithm6 <- data[which(data$algorithm == 6),c("nodes", "interference", "sd_interference", "hops", "sd_hops", "distance", "sd_dist", "totalTraffic", "cluster")]
algorithm6 <- aggregate(algorithm6, by=list(algorithm6$nodes, algorithm6$cluster), FUN=mean)
algorithm1
algorithm5
